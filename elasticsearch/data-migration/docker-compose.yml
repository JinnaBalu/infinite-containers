---
version: '3.6'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    container_name: elasticsearch
    environment:
      - cluster.name="es-data-cluster"
      - network.host=0.0.0.0
      - transport.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=1
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=false
    ports: ['9200:9200']
    networks: ['stack']
    volumes:
      - 'es_data:/usr/share/elasticsearch/data'
    healthcheck:
      test: curl -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.2
    container_name: kibana
    environment:
      - server.name=kibana
      - server.host="0"
      - elasticsearch.url=https://elasticsearch:9200
      - server.ssl.enabled=false
      - xpack.monitoring.ui.container.elasticsearch.enabled=true
    ports: ['5601:5601']
    networks: ['stack']
    depends_on: ['elasticsearch']
    healthcheck:
      test: curl -s https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:6.4.2
  #   container_name: logstash
  #   environment:
  #     INPUT_TCP_PORT: 5000
  #     INPUT_UDP_PORT: 5000
  #     INPUT_HTTP_PORT: 5001
  #     ELASTICSEARCH_HOST: 192.31.254.194
  #     ELASTICSEARCH_PORT: 9200
  #   volumes:
  #      - ./log-conf/:/usr/share/logstash/pipeline/
  #   networks: ['stack']
  #   depends_on: ['elasticsearch']
  #   healthcheck:
  #     test: bin/logstash -t
  #     interval: 60s
  #     timeout: 50s
  #     retries: 5

networks: {stack: {}}
volumes:
  es_data:
